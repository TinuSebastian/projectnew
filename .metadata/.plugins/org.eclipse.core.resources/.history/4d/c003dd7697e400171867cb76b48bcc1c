/*package com.niit.WearStyleBackend.DAOImpl;

import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.niit.WearStyleBackend.DAO.CartDAO;
import com.niit.WearStyleBackend.Model.Cart;

public class CartDAOIml implements CartDAO
{
	@Autowired
	SessionFactory sessionFactory;

	

	public boolean addCart(Cart cart)
	{
	Session session=sessionFactory.openSession();
	session.beginTransaction();
	session.persist(cart);
	session.getTransaction().commit();
	return true;
		
	}

	public boolean updateCart(Cart cart)
	{Session session=sessionFactory.openSession();
	session.beginTransaction();
	session.update(cart);
	session.getTransaction().commit();
	return true;
		
	}

	public boolean deleteCart(Cart cart) {
		Session session=sessionFactory.openSession();
		session.beginTransaction();
		session.delete(cart);
		session.getTransaction().commit();
		return true;	
	}

	public Cart getCartItem(int cartitemId)
	{
		 Session session=sessionFactory.openSession();
	        Cart cart=(Cart)session.get(Cart.class, cartitemId);
	        session.close();
	        return cart;
	}
	
	
	@SuppressWarnings("unchecked")
	public List<Cart> getCartItems(String username)
	{
		
		Session session=sessionFactory.openSession();
        List<Cart> cr=null;
        try
        {
            session.beginTransaction();
             
            cr=(List<Cart>)session.createQuery("From Cart where USERMAILID='"+username+"'").list();
            session.getTransaction().commit();
        }
        catch(HibernateException e)
        {
            session.getTransaction().rollback();
        }
        return cr;
	}

	public Cart getCartById(int pid, String userEmail) {
		Session session=sessionFactory.openSession();
		Cart cr=null;
		try
		{
			System.out.println("===========Product existence============="+cr);
			session.beginTransaction();
			cr=(Cart)session.createQuery("From Cart where USERMAILID =:email and PRODUCT_ID=:id")
					        .setString("email",userEmail)
					        .setInteger("id", pid)
					        .uniqueResult();
			session.getTransaction().commit();
			System.out.println("Cart: "+cr);
			return cr;
		}
		catch(HibernateException e)
		{
			System.out.println("===========ERROR============="+e.getMessage());
			session.getTransaction().rollback();
		}
		return cr;
	}	
	}


*/